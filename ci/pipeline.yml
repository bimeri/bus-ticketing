
resource_types:
  - name: enhanced-semver
    type: docker-image
    source:
      repository: gstack/semver-resource

resources:
  - name: source-code-from-gitlab
    type: git
    source:
      uri: https://golab.live/gowaka/gowaka-service
      username: ((gitlab_username))
      password: ((gitlab_password))
      branch: develop
      skip_ssl_verification: true

  - name: minio-s3
    type: s3
    source:
      regexp: gowaka-service-(.*).jar
      endpoint: ((minio_endpoint_url))
      bucket: ((minio_bucket))
      access_key_id: ((minio_access_key))
      secret_access_key: ((minio_secret_key))
      region_name: ((minio_region_name))
      skip_ssl_verification: true

  - name: version
    type: enhanced-semver
    source:
      driver: git
      uri: https://golab.live/gowaka/gowaka-service
      username: ((gitlab_username))
      password: ((gitlab_password))
      branch: version
      file: version
      skip_ssl_verification: true

  - name: nexus-settings
    type: git
    source:
      driver: git
      uri: https://golab.live/gg-cicd-credentails/nexus-pipeline-creds-files.git
      username: ((gitlab_username))
      password: ((gitlab_password))
      branch: master
      skip_ssl_verification: true

jobs:
  - name: test-and-build
    build_log_retention:
      builds: 10
    public: true
    plan:
      - get: source-code-from-gitlab
        trigger: false
      - get: version
        params: { pre: rc }
      - get: nexus-settings
        trigger: false
      - task: run-test-and-build-jar-file
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: "ggs2.space:8123/java8-node14"
              username: ((lcs_username))
              password: ((lcs_password))
              tag: "latest"
              insecure_registries: [ "ggs2.space:8123" ]
          inputs:
            - name: source-code-from-gitlab
            - name: version
            - name: nexus-settings
          outputs:
            - name: jar-file
          caches:
            - path: source-code-from-gitlab/.m2
          run:
            path: source-code-from-gitlab/ci/tasks/test-and-build.sh

      - put: minio-s3
        params:
          file: jar-file/*.jar
      - put: version
        params: { file: version/version }

  - name: deploy-dev
    build_log_retention:
      builds: 10
    public: true
    plan:
      - get: minio-s3
        passed: [ test-and-build ]
        trigger: true
      - get: source-code-from-gitlab
      - get: version
      - task: run-deploy-dev-script
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: "ggs2.space:8123/lc"
              username: ((lcs_username))
              password: ((lcs_password))
              tag: "latest"
              insecure_registries: [ "ggs2.space:8123" ]
          inputs:
            - name: source-code-from-gitlab
            - name: minio-s3
          run:
            path: ./source-code-from-gitlab/ci/tasks/deploy-dev.sh
          params:
            LDC_TARGET: ((ldc_target))
            LDC_USERNAME: ((ldc_username))
            LDC_PASSWORD: ((ldc_password))
            APP_NAME: ((app_name))
            APP_CLIENT_URL: ((app_client_url))
            APP_CLIENT_ID: ((app_client_id))
            APP_CLIENT_SECRET: ((app_client_secret))
            GW_DB_NAME: ((gw_db_name))
            GW_DB_USER: ((gw_db_user))
            GW_DB_PWD: ((gw_db_pwd))
            PAYAMGO_CLIENT_KEY: ((payamgo_client_key))
            PAYAMGO_CLIENT_SECRET: ((payamgo_client_secret))
            AS_PUBLIC_KEY: ((as_public_key))


  - name: deploy-containarized-image
    build_log_retention:
      builds: 10
    public: true
    plan:
      - get: minio-s3
        passed: [ deploy-dev ]
      - get: source-code-from-gitlab
      - get: version
      - task: run-deploy-image-script
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: "ggs2.space:8123/curl"
              username: ((lcs_username))
              password: ((lcs_password))
              tag: "latest"
              insecure_registries: [ "ggs2.space:8123" ]
          inputs:
            - name: source-code-from-gitlab
            - name: minio-s3
            - name: version
          run:
            path: ./source-code-from-gitlab/ci/tasks/deploy-containarized-app.sh
          params:
            LCS_APPNAME: ((lcs_appName))
            LCS_APPTYPE: ((lcs_appType))
            LCS_PORT: ((lcs_port))
            LCS_REGISTRY: ((lcs_registry))
            LCS_USERNAME: ((lcs_username))
            LCS_PASSWORD: ((lcs_password))
            LCS_URL: ((lcs_url))

  - name: major
    plan:
      - put: version
        params: { bump: major, pre: rc }

  - name: minor
    plan:
      - put: version
        params: { bump: minor, pre: rc }
